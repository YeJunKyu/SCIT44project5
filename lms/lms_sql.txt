
--회원 테이블
create table lms_member(
    memberid        varchar2(100)    primary key,
    memberpw        varchar2(100)   not null,
    membername      varchar2(100)    not null,
    birthday        date            not null,
    phone           varchar2(100)    not null,
    gender          varchar2(50)    not null,
    email           varchar2(200)   not null,
    address         varchar2(200)   not null,
    memberphoto     varchar2(500),
    photopath       varchar2(500),
    note            varchar2(1000),
    rolename        varchar2(100)   default 'ROLE_USER' check (rolename in('ROLE_USER','ROLE_teacher','ROLE_student','ROLE_admin')),
    enabled         number          default 1 check (enabled in (0, 1))
);


--학생 테이블
CREATE TABLE lms_student (
    memberid	varchar2(20) primary key references lms_member(memberid) ON DELETE CASCADE,
    school	varchar2(100)		NULL,
    major	varchar2(100)		NULL,
    graduation	number	DEFAULT 1	NULL,
    curriculum	varchar2(100)		NULL
);

--분반테이블 (일본어)
CREATE TABLE class_jp_category (
    memberid	varchar2(20) primary key references lms_member(memberid) ON DELETE CASCADE,
    jpclassname	varchar2(50)		NULL,
    jpsubject	varchar2(100)		NULL
);

--분반테이블 (IT)
CREATE TABLE class_it_category (
    memberid	varchar2(20) primary key references lms_member(memberid) ON DELETE CASCADE,
    itclassname	varchar2(50)		NULL,
    itsubject	varchar2(100)		NULL
);

--자격증, 내정회사, 특이사항, 경력 테이블
CREATE TABLE student_info (
    memberid	varchar2(20) primary key references lms_member(memberid) ON DELETE CASCADE,
    certi_jpname	varchar2(200)		NULL,
    certi_name	varchar2(200)		 NULL,
    company	varchar2(200)		NULL,
    note	varchar2(2000)		NULL,
    experience	varchar2(200)		NULL,
    scitgraduation varchar2(100),
    originalphoto varchar2(2000),
    savedphoto varchar2(2000)
);



--공지 테이블
create table lms_notice(
	noticenum	    number	        not null primary   key,
	memberid	    varchar2(20)	not null,
	noticetitle 	varchar2(50)	not null,
	noticecontents	varchar2(1000)	not null,
	noticedate	    date	        default sysdate,
	viewauthority	number      	default 0, --읽기권한(0:모두, 1:선생)
	hits	        number	        default 0,
	originalfile	varchar2(225),
	savedfile   	varchar2(225)
);

--공지 시퀀스
create sequence lms_notice_seq;

--시험 반영비중 테이블
CREATE TABLE primary_ratio_category (
	category_id	number		NOT NULL,
	parent_id	number		NULL,
    categoryname	varchar2(50)		NULL,
	ratio	decimal(5,2)		NULL,
    divname varchar2(100) NULL,
    CONSTRAINT PK_PRIMARY_RATIO_CATEGORY PRIMARY KEY (category_id),
    CONSTRAINT FK_PRIMARY_PARENT_CATEGORY FOREIGN KEY (parent_id) REFERENCES Primary_ratio_category (category_id) ON DELETE CASCADE,
     CONSTRAINT UQ_CATEGORY_NAME UNIQUE (categoryname)
);
--시험 비중테이블 고유번호 시퀀스
create sequence primary_ratio_category_seq;




--일정 테이블
create table lms_schedule (
	eventid         number          primary key,
	title           varchar2(200)   not null,
	note            varchar2(1000),
	startdate       date            default sysdate,
	enddate         date,
    allday          number(1),
    color           varchar2(100),
    textcolor       varchar(100),
	memberid        varchar2(100)   not null
);

--일정 테이블 시퀀스
create sequence lms_schedule_seq;



--시험 테이블 (임시 테이블입니다)
create table lms_test (
    testid  number primary key,
    testname    varchar2(500),
    categoryid number, -- 분류 고유번호
    testdate date,
    testlimit date
);

--시험 테이블 시퀀스
create sequence lms_test_seq;

--문제 테이블
create table lms_question (
    testid number,
    qid number primary key,
    contents varchar2(1000),
    points number,
    type number,
    originalfile varchar2(500),
    savedfile varchar2(500),

    constraint fk_lms_questions foreign key (testid)
        references lms_test(testid)
);

--문제 테이블 시퀀스
create sequence lms_question_seq;


--문제 테이블의 보기 및 정답 테이블
CREATE TABLE lms_q_options (
    qid NUMBER,
    value NUMBER,
    content VARCHAR2(500),
    checked VARCHAR2(50),

    CONSTRAINT pk_lms_q_options PRIMARY KEY (qid, value),

    CONSTRAINT fk_lms_q_options FOREIGN KEY (qid)
        REFERENCES lms_question(qid)
        ON DELETE CASCADE
);