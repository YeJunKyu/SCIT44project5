<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit.lms.dao.ScheduleDAO">
    <!-- 카테고리 목록 -->
    <select id="categoryList" resultType="Student">
        select * from lms_student
        order by
        to_number(regexp_substr(curriculum, '\d+'))
    </select>

    <!-- 일정 목록 -->
    <select id="list" resultType="Schedule">
        select
            eventid,
            title,
            note,
            to_char(startdate, 'YYYY-MM-DD HH24:MI:SS') startdate,
            to_char(enddate, 'YYYY-MM-DD HH24:MI:SS') enddate,
            allday,
            color,
            textcolor,
            memberid,
            categories
        from
            lms_schedule
    </select>

    <!-- 일정 목록(학생) -->
    <select id="listStudent" resultType="Schedule">
        select
            eventid,
            title,
            note,
            to_char(startdate, 'YYYY-MM-DD HH24:MI:SS') startdate,
            to_char(enddate, 'YYYY-MM-DD HH24:MI:SS') enddate,
            allday,
            memberid,
            categories
        from lms_schedule
        where categories = '전체' or categories=#{curriculum}
    </select>

    <!-- 학생 커리큘럼 조회 -->
    <select id="studentCurriculum">
        select curriculum from lms_student where memberid=#{memberid}
    </select>

    <!-- 최근 일정 목록 -->
    <select id="recentList" parameterType="hashmap" resultType="Schedule">
        select
            eventid,
            title,
            note,
            to_char(startdate, 'YYYY-MM-DD') startdate,
            to_char(enddate, 'YYYY-MM-DD') enddate,
            allday,
            color,
            textcolor,
            memberid,
            categories
        from
            lms_schedule
        where
        <if test="curriculum != null">
            (categories='전체' or categories=#{curriculum})
            and
        </if>
            ((startdate &gt; TO_DATE(#{start}, 'YYYY-MM-DD HH24:MI:SS') and
            startdate &lt; TO_DATE(#{end}, 'YYYY-MM-DD HH24:MI:SS'))
            or
            (enddate &gt; TO_DATE(#{start}, 'YYYY-MM-DD HH24:MI:SS') and
            enddate &lt; TO_DATE(#{end}, 'YYYY-MM-DD HH24:MI:SS')))
        order by
            startdate
    </select>

    <!-- 일정 등록 -->
    <insert id="insert" parameterType="Schedule">
        insert into
            lms_schedule
        values
            (lms_schedule_seq.nextval
            , #{title}
            , #{note}
            , TO_DATE(#{startdate}, 'YYYY-MM-DD HH24:MI:SS')
            , TO_DATE(#{enddate}, 'YYYY-MM-DD HH24:MI:SS')
            , #{allday}
            , #{color}
            , #{textcolor}
            , #{memberid}
            , #{categories})
    </insert>

    <!-- 일정 선택 -->
    <select id="select" resultType="Schedule">
        select
            eventid,
            title,
            note,
            to_char(startdate, 'YYYY-MM-DD HH24:MI:SS') startdate,
            to_char(enddate, 'YYYY-MM-DD HH24:MI:SS') enddate,
            allday,
            color,
            textcolor,
            memberid,
            categories
        from
            lms_schedule
        where eventid=#{eventid}
    </select>

    <!-- 일정 삭제 -->
    <delete id="delete" parameterType="Schedule">
        delete from
            lms_schedule
        where
            eventid=#{eventid} and memberid=#{memberid}
    </delete>

    <!-- 일정 수정 -->
    <update id="update">
        update lms_schedule
        set
            title=#{title}
            , note=#{note}
            , startdate=to_date(#{startdate}, 'YYYY-MM-DD HH24:MI:SS')
            , enddate=to_date(#{enddate}, 'YYYY-MM-DD HH24:MI:SS')
            , allday=#{allday}
            , categories=#{categories}
        where
            eventid=#{eventid} and memberid=#{memberid}
    </update>

</mapper>
