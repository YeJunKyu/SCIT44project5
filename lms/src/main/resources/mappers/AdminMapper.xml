<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit.lms.dao.AdminDAO">

<!--    회원조회-->
    <select id="selectAll"
            resultType="Member">
    select memberid,
        membername,
        gender,
        address,
        phone,
        email,
        rolename,
        enabled
        from lms_member

    </select>

<!--    다중수정-->
    <update id="update" parameterType="Member">
        UPDATE lms_member
        SET
        <if test="rolename != null">
            rolename = #{rolename},
        </if>
        <if test="enabled != null">
            enabled = #{enabled}
        </if>
        WHERE
        memberid = #{memberid}
    </update>

<!--    학생관리 학생조회-->
    <select id="selectAllStudents" resultType="StudentsAll">
        SELECT
        m.memberid as "member.memberid",
        m.membername as "member.membername",
        TO_CHAR(m.birthday, 'YY/MM/DD') as "member.birthday",
        m.gender as "member.gender",
        m.address as "member.address",
        s.school as "student.school",
        s.major as "student.major",
        s.graduation as "student.graduation",
        s.curriculum as "student.curriculum",
        jp.jpclassname as "jpCategory.jpclassname",
        it.itclassname as "itCategory.itclassname"
        FROM
        lms_member m
        JOIN lms_student s ON m.memberid = s.memberid
        JOIN class_jp_category jp ON m.memberid = jp.memberid
        JOIN class_it_category it ON m.memberid = it.memberid
        JOIN student_info si ON m.memberid = si.memberid
        where m.rolename = 'ROLE_student'
    </select>
<!--학생관리 : 과정등록폼-->
    <select id="selectOnlyStudent" resultType="StudentsAll">
        SELECT m.memberid AS "member.memberid",
        m.membername as "member.membername",
        s.curriculum as "student.curriculum"
        FROM lms_member m
        LEFT JOIN lms_student s ON m.memberid = s.memberid
        WHERE m.rolename = 'ROLE_student' AND s.curriculum IS NULL

    </select>



<!--    학생관리 : 과정 등록-->
    <insert id="insertCurriculum" parameterType="Student">
        INSERT ALL
        <foreach collection="list" item="s">
            INTO lms_student (memberid, curriculum) VALUES (#{s.memberid}, #{s.curriculum})
        </foreach>
        SELECT * FROM dual
    </insert>

<!--    학생관리: 분반등록 폼-->
    <select id="selectOnlyStudentClass" resultType="StudentsAll">
        SELECT m.memberid AS "member.memberid",
        m.membername as "member.membername",
        jp.jpclassname AS "jpCategory.jpclassname",
        it.itclassname AS "itCategory.itclassname"
        FROM lms_member m
        LEFT JOIN class_jp_category jp ON m.memberid = jp.memberid
        LEFT JOIN class_it_category it ON m.memberid = it.memberid
        WHERE m.rolename = 'ROLE_student' AND jp.jpclassname IS NULL AND it.itclassname IS NULL

    </select>

<!--    학생관리: 분반등록-->
    <insert id="insertClass" parameterType="StudentClasses">
        INSERT ALL
        <foreach collection="list" item="s">
            INTO class_jp_category (memberid, jpclassname, jpsubject)
            VALUES (#{s.memberid}, #{s.jpclassname}, #{s.jpsubject})

            INTO class_it_category (memberid, itclassname, itsubject)
            VALUES (#{s.memberid}, #{s.itclassname}, #{s.itsubject})
        </foreach>
        SELECT * FROM dual
    </insert>

<!--    학생관리 : 기타정보등록폼-->
    <select id="selectOnlyStudentInformation"  resultType="Member">
     select m.*
        from lms_member m
        LEFT JOIN student_info si ON m.memberid = si.memberid
        WHERE m.rolename = 'ROLE_student' AND (
        si.certi_jpname IS NULL AND
        si.certi_name IS NULL AND
        si.company IS NULL AND
        si.note IS NULL AND
        si.experience IS NULL AND
        si.scitgraduation IS NULL AND
        si.originalphoto IS NULL AND
        si.savedphoto IS NULL
        )
    </select>

<!--    학생관리 : 기타정보등록-->
    <insert id="insertInformation" parameterType="StudentInfo">
        INSERT ALL
        <foreach collection="list" item="info" separator=" ">
            INTO student_info (memberid, certi_jpname, certi_name,  scitgraduation)
            VALUES (#{info.memberid}, #{info.certi_jpname}, #{info.certi_name},  #{info.scitgraduation})
        </foreach>
        SELECT * FROM dual
    </insert>
    
<!--    시험비중등록폼 대분류 등록-->
<insert id="insertBigRatio" parameterType="PrimaryRatio">
    INSERT INTO primary_ratio_category(category_id, categoryname, ratio, divname)
    VALUES (primary_ratio_category_seq.NEXTVAL, #{categoryname}, #{ratio}, #{divname})

</insert>
<!--    대분류 등록이후 다음폼조회-->
    <select id="ReadBigRatio" parameterType="String" resultType="PrimaryRatio">
        select category_id,
        categoryname,
        divname FROM primary_ratio_category WHERE divname = '대분류'
    </select>

    <!--    시험비중등록폼 중분류 등록-->
    <insert id="InsertMiddleRatio" parameterType="PrimaryRatio">
        INSERT INTO primary_ratio_category(category_id, parent_id,categoryname, ratio, divname)
        VALUES (primary_ratio_category_seq.NEXTVAL, #{parent_id}, #{categoryname}, #{ratio}, #{divname})

    </insert>

<!--    시험비중등록폼 소분류-->
    <select id="ReadMiddleRatio" parameterType="String" resultType="PrimaryRatio">
        select category_id,
        categoryname,
        divname FROM primary_ratio_category WHERE divname = '중분류'
    </select>

<!--    시험조회:대분류-->
    <select id="ReadTestBigList" resultType="PrimaryRatio">
        select * from primary_ratio_category
        where divname = '대분류'
        order by category_id

    </select>

    <!--    시험조회:중분류-->
    <select id="ReadTestMiddleList" resultType="PrimaryRatio">
        select * from primary_ratio_category
        where divname = '중분류'
        order by category_id

    </select>

    <!--    시험조회:소분류-->
    <select id="ReadTestSmallList" resultType="PrimaryRatio">
        select * from primary_ratio_category
        where divname = '소분류'
        order by category_id

    </select>

<!--    시험종목비중수정-->
    <update id="updateTestList" parameterType="PrimaryRatio">
        update primary_ratio_category
        set categoryname = #{categoryname},
        ratio = #{ratio},
        divname = #{divname}
        where category_id = #{category_id}
    </update>
</mapper>
